{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2022-12-23T01:25:45.244Z",
    "end": "2022-12-23T01:25:46.501Z",
    "duration": 1257,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "63908ae6-d346-4fa4-aa78-e83c9571b5fd",
      "title": "",
      "fullFile": "C:\\Users\\lpiri\\OneDrive\\Escritorio\\Projects\\ch-backend\\src\\test\\productos.test.js",
      "file": "\\src\\test\\productos.test.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "eae25b5a-0661-4201-930b-3fe5e3ca2771",
          "title": "Product tests",
          "fullFile": "C:\\Users\\lpiri\\OneDrive\\Escritorio\\Projects\\ch-backend\\src\\test\\productos.test.js",
          "file": "\\src\\test\\productos.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "GET /productos",
              "fullTitle": "Product tests GET /productos",
              "timedOut": false,
              "duration": 107,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(url);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "a74483bd-f55e-456a-85d0-4aea750bd1a2",
              "parentUUID": "eae25b5a-0661-4201-930b-3fe5e3ca2771",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /productos/:id",
              "fullTitle": "Product tests GET /productos/:id",
              "timedOut": false,
              "duration": 1037,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let products = await productService.getAllProducts();\nlet productsIds = [];\nproducts.forEach(async (product) => {\n  productsIds.push(product.id);\n});\nlet randomProductId =\n  productsIds[Math.floor(Math.random() * productsIds.length)];\nconst response = await axios.get(`${url}/${randomProductId}`);\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "a3b85bc8-f55a-42e8-891c-663c52ad7454",
              "parentUUID": "eae25b5a-0661-4201-930b-3fe5e3ca2771",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST /productos",
              "fullTitle": "Product tests POST /productos",
              "timedOut": false,
              "duration": 100,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.post(\n  url,\n  {\n    title: \"Test\",\n    price: 100,\n    description: \"Test\",\n    code: \"code\",\n    thumbnail: \"thumbnail\",\n    stock: 100,\n  },\n  {\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer admin\",\n    },\n  }\n);\nassert.equal(response.status, 201);",
              "err": {},
              "uuid": "7bd56d21-bd5a-4af7-b5fd-77b0d48798f8",
              "parentUUID": "eae25b5a-0661-4201-930b-3fe5e3ca2771",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT /productos/:id",
              "fullTitle": "Product tests PUT /productos/:id",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.put(`${url}/1`, {\n  title: \"Test\",\n  price: 100,\n  description: \"Test\",\n  code: \"code\",\n  thumbnail: \"thumbnail\",\n  stock: 100,\n});\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "7082d15f-99b6-4f71-8a5c-056c343d9835",
              "parentUUID": "eae25b5a-0661-4201-930b-3fe5e3ca2771",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a74483bd-f55e-456a-85d0-4aea750bd1a2",
            "a3b85bc8-f55a-42e8-891c-663c52ad7454",
            "7bd56d21-bd5a-4af7-b5fd-77b0d48798f8",
            "7082d15f-99b6-4f71-8a5c-056c343d9835"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1250,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}